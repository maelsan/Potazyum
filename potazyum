#! /usr/bin/env python3

import re
import optparse
import urllib.request
import urllib.parse
import bs4 as BeautifulSoup

URL_STACKOVERFLOW_SEARCH = "http://stackoverflow.com/search?q="

parser = optparse.OptionParser("potazyum [options] -q [question]")
parser.add_option("-v", "--vote", dest="vote", default=0, help="Precise if a answer need to have a sum of vote equal or superior.")
parser.add_option("-s", "--solved", dest="solved", default=False, help="Precise if a answer need to be solved.")
parser.add_option("-q", "--question", dest="question", default="", help="Write your question !")

(options, args) = parser.parse_args()
isLink = re.compile('(.)+', re.IGNORECASE)

if len(args) < 1:
    parser.error("\033[1;31m[x]\033[m Please, precise a option or use --help")
elif isLink.match(options.question) is None:
    parser.error("\033[1;31m[x]\033[m Dude, write your question.")

page = urllib.request.urlopen(URL_STACKOVERFLOW_SEARCH + urllib.parse.quote(options.question))
parse = BeautifulSoup.BeautifulSoup(page.read())

resultsHeaders = parse.find('div', attrs={'class': 'subheader results-header'})
resultsHeaders = resultsHeaders.find('h2').text.strip()
print ("Number of potentials results : " + resultsHeaders)

for div in parse.findAll('div', attrs={'class': 'result-link'}):
    link = div.find('a')
    print(link.text.strip())
    print(link['href'].strip())

"""
def sortVote(vote):
    # TODO:
    # Sort by vote value.
    return 0;

def ifSolved():
    # TODO:
    # Sort by state.
    return 0;
"""
