#! /usr/bin/env python3

import re
import optparse
import urllib.request
import urllib.parse
import time
import bs4 as BeautifulSoup

URL_STACKOVERFLOW_SEARCH = "http://stackoverflow.com/search?q="
VERSION = "-> \033[1;36m0.0.0\033[m"

parser = optparse.OptionParser("potazyum [options] -q [question]")
parser.add_option("-s", "--solved", action="store_true", help="Precise if a answer need to be solved.")
parser.add_option("-n", "--nvote", dest="nvote", default=0, help="Precise if a answer need to have a sum of vote equal or superior.")
parser.add_option("-q", "--question", dest="question", default="False", help="Write your question !")
parser.add_option("-v", "--version", action="store_true", help="Display version")


(options, args) = parser.parse_args()
isLink = re.compile('(.)+', re.IGNORECASE)

if options.version:
    print(VERSION)
    exit()
elif len(args) < 1:
    parser.error("\033[1;31m[x]\033[m Please, precise a option or use --help")
elif isLink.match(options.question) is None:
    parser.error("\033[1;31m[x]\033[m Dude, write your question.")
elif options.solved:
    options.question = options.question + " answers:1" # StackOverflow tips

# BeautifulSoup + urllib
page = urllib.request.urlopen(URL_STACKOVERFLOW_SEARCH + urllib.parse.quote(options.question))
parse = BeautifulSoup.BeautifulSoup(page.read())

resultsHeaders = parse.find('div', attrs={'class': 'subheader results-header'})
resultsHeaders = resultsHeaders.find('h2').text.strip()
print ("Number of potentials results : \033[1;36m" + resultsHeaders + "\033[m\n")

for div in parse.findAll('div', attrs={'class': 'question-summary search-result'}):
    if (div.find('div', attrs={'class': 'status'}) is None):
        break
    status = div.find('div', attrs={'class': 'status'})
    color = "\033[1;33m[?]\033[m "

    # answered OR answered-accepted elif unanswered
    if status['class'][1] == 'answered' or status['class'][1] == 'answered-accepted':
        color = "\033[1;32m[answered]\033[m "
    elif status['class'][1] == 'unanswered':
        color = "\033[1;31m[unanswered]\033[m "

    link = div.find('a')
    print(color + link.text.strip())
    print("http://stackoverflow.com/" + link['href'].strip() + "\n")
    time.sleep(1)
